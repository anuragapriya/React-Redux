# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - Development

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - script: |
      npm cache clean --force
      npm install --force
      npm run build
    displayName: 'Install Dependencies & Build'

  - script: |
      # Ensure the build directory exists
      mkdir -p $(Build.ArtifactStagingDirectory)/build

      # Ensure web.config is added if not already present
      if [ ! -f "$(Build.ArtifactStagingDirectory)/build/web.config" ]; then
        echo '<?xml version="1.0" encoding="utf-8"?>' > $(Build.ArtifactStagingDirectory)/build/web.config
        echo '<configuration>' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '  <system.webServer>' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '    <staticContent>' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '      <mimeMap fileExtension=".otf" mimeType="font/otf" />' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '    </staticContent>' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '  </system.webServer>' >> $(Build.ArtifactStagingDirectory)/build/web.config
        echo '</configuration>' >> $(Build.ArtifactStagingDirectory)/build/web.config
      fi
    displayName: 'Ensure web.config is Added to Build Folder'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/build'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'
    displayName: 'Copy Build Files to Staging Directory'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/build'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    displayName: 'Archive Build Output'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      ArtifactName: 'drop'
    displayName: 'Publish Build Artifact'

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'azure-s1'
      appType: 'webApp'
      WebAppName: 'WGLHZUS2DESVAS001'
      package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    displayName: 'Deploy to Azure Web App'
